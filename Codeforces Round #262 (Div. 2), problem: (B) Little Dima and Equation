#pragma GCC optimize("Ofast")
#pragma GCC target("avx,avx2,fma")
#pragma GCC optimization ("unroll-loops")

#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define pii pair<int,int>
#define pli pair<long long int,int>
#define pbi pair<bool,int>
#define pob pop_back
#define all(a) a.begin(),a.end()
#define fio ios_base::sync_with_stdio(false); cin.tie(NULL);cout.tie(NULL);
#define i64 long long int
#define mem(x,y) memset(x,y,sizeof(x))
#define fill(arr,b) fill(arr, arr+sizeof(arr)/sizeof(arr[0]), b)
#define maxarr(n,arr,m) m=-1e9;for(int i=0;i<n;i++)if(arr[i]>m) m=arr[i];
#define read freopen("input.txt","r",stdin);
#define F first
#define S second

const int maxn = (i64)1e9+7;
const double pi = acos(-1.0);

//bool fne(const pii &a, const pii &b){return (a.F > b.F)||(a.F==b.F&&a.S>b.S);}
//bool sne(const pii &a, const pii &b){return (a.S < b.S)||(a.S==b.S&&a.F<b.F);}

i64 S(i64 n){
    i64 sum=0;
    while(n!=0){
        sum+=(n%10);
        n/=10;
    }
    return sum;
}
i64 poww(i64 n,i64 i){
    i64 sum=1;
    while(i--) sum*=n;
    return sum;
}

vector<i64>v;
int main(){
    //read
    fio;
    i64 a,b,c;
    cin>>a>>b>>c;
    for(i64 s=1;s<=81;s++){
        i64 x=b*poww(s,a)+c;
        if(S(x)==s && x<1000000000) v.pb(x);
    }
    cout<<v.size()<<endl;
    for(auto i:v) cout<<i<<" ";

return 0;
}
