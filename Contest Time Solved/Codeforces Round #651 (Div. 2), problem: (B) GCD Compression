#pragma GCC optimize("Ofast")
#pragma GCC target("avx,avx2,fma")
#pragma GCC optimization ("unroll-loops")

#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define pii pair<int,int>
#define pli pair<long long int,int>
#define pbi pair<bool,int>
#define pob pop_back
#define all(a) a.begin(),a.end()
#define fio ios_base::sync_with_stdio(false); cin.tie(NULL);cout.tie(NULL);
#define i64 long long int
#define mem(x,y) memset(x,y,sizeof(x))
#define fill(arr,b) fill(arr, arr+sizeof(arr)/sizeof(arr[0]), b)
#define maxarr(n,arr,m) m=-1e9;for(int i=0;i<n;i++)if(arr[i]>m) m=arr[i];
#define read freopen("input.txt","r",stdin);
#define F first
#define S second

const int maxn = (i64)1e9+7;
const double pi = acos(-1.0);

//bool fne(const pii &a, const pii &b){return (a.F > b.F)||(a.F==b.F&&a.S>b.S);}
//bool sne(const pii &a, const pii &b){return (a.S < b.S)||(a.S==b.S&&a.F<b.F);}

int main(){
    //read;
    fio;
    int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        int a[2*n];
        deque<int>e,o;
        for(int i=0;i<2*n;i++){
            cin>>a[i];
            if(a[i] %2 == 0)e.pb(i);
			else o.pb(i);
        }
        int k=0,i=0,j=0;
        int os=o.size(),es=e.size();
        if(os%2 == 1 && es%2 == 1){
			o.pop_front();
			e.pop_front();
		}
		else if(os%2 == 0){
			o.pop_front();
			o.pop_front();
		}
		else{
			e.pop_front();
			e.pop_front();
		}
		while(k<n-1&&j<e.size()){
            cout << e[j++] + 1<< " " << e[j++] + 1<< endl;
			k++;
		}
		while(k<n-1 &&i < o.size()){
			cout << o[i++] + 1<<" " << o[i++] + 1<< endl;
			k++;
		}
    }
return 0;
}
