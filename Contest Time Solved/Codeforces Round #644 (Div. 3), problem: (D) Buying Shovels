#pragma GCC optimize("Ofast")
#pragma GCC target("avx,avx2,fma")
#pragma GCC optimization ("unroll-loops")

#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define pii pair<int,int>
#define pli pair<long long int,int>
#define pbi pair<bool,int>
#define pob pop_back
#define all(a) a.begin(),a.end()
#define fio ios_base::sync_with_stdio(false); cin.tie(0);cout.tie(0);
#define i64 long long int
#define mem(x,y) memset(x,y,sizeof(x))
#define fill(arr,b) fill(arr, arr+sizeof(arr)/sizeof(arr[0]), b)
#define maxarr(n,arr,m) m =-1e9;for(int i=0;i<n;i++)if(arr[i]>m) m=arr[i];
#define read freopen("input.txt","r",stdin);
#define F first
#define S second

const int maxn = (i64)1e9+7;
const double pi = acos(-1.0);

//bool fne(const pii &a, const pii &b){return (a.F < b.F)||(a.F==b.F&&a.S<b.S);}
//bool sne(const pii &a, const pii &b){return (a.S < b.S)||(a.S==b.S&&a.F<b.F);}

int main()
{
    //read;
    int t;
    scanf("%d",&t);
    while(t--)
    {
        i64 n,k;
        scanf("%lld%lld",&n,&k);
        if(n<=k){printf("1\n");continue;}
        i64 mx=0;
        for(i64 i=1;i*i<=n;i++)
        {
            if(n%i==0)
            {
                if(n/i==i&&i<=k) mx=max(mx,i);
                else{if((n/i)<=k) mx=max(mx,(n/i));if(i<=k) mx=max(mx,i);}
            }
        }
        printf("%lld\n",(n/mx));
    }

    return 0;
}
