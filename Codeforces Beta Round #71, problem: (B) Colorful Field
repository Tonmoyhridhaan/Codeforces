#pragma GCC optimize("Ofast")
#pragma GCC target("avx,avx2,fma")
#pragma GCC optimization ("unroll-loops")

#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define pii pair<int,int>
#define pli pair<long long int,int>
#define pbi pair<bool,int>
#define pob pop_back
#define all(a) a.begin(),a.end()
#define fio ios_base::sync_with_stdio(false); cin.tie(NULL);cout.tie(NULL);
#define i64 long long int
#define mem(x,y) memset(x,y,sizeof(x))
#define fill(arr,b) fill(arr, arr+sizeof(arr)/sizeof(arr[0]), b)
#define maxarr(n,arr,m) m=-1e9;for(int i=0;i<n;i++)if(arr[i]>m) m=arr[i];
#define read freopen("input.txt","r",stdin);
#define sortd(x,y) sort(x,y,greater<int>());
#define F first
#define S second

const int maxn = (i64)1e9+7;
const double pi = acos(-1.0);

//bool fne(const pii &a, const pii &b){return (a.F > b.F)||(a.F==b.F&&a.S>b.S);}
//bool sne(const pii &a, const pii &b){return (a.S < b.S)||(a.S==b.S&&a.F<b.F);}
//bool isprime(int n){for(int i=2;i*i<=n;i++){if(n%i==0)return false;}return true;}

int arr[40004];
int main(){
    //read;
    fio;
    int n,m,k,t;
    cin>>n>>m>>k>>t;
    set<pii>st;
    int a,b;
    arr[1]=0;
    for(int i=2;i<=n;i++) arr[i]=m;
    while(k--){
        cin>>a>>b;
        st.insert({a,b});
        arr[a+1]--;
    }
    for(int i=3;i<=n;i++) arr[i]+=arr[i-1];
    //for(int i=1;i<=n;i++) cout<<i<<" "<<arr[i]<<endl;
    while(t--){
        cin>>a>>b;
        if(st.find({a,b})!=st.end()) {cout<<"Waste"<<endl;continue;}
        int x=arr[a];
        for(int i=1;i<=b;i++){
            if(st.find({a,i})!=st.end()) continue;
            x++;
        }
        x%=3;
        if(x==1) cout<<"Carrots";
        else if(x==2) cout<<"Kiwis";
        else if(x==0) cout<<"Grapes";
        cout<<endl;
    }
    return 0;
}
