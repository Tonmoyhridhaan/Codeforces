#pragma GCC optimize("Ofast")
#pragma GCC target("avx,avx2,fma")
#pragma GCC optimization ("unroll-loops")

#include<bits/stdc++.h>
using namespace std;

/*#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;

typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> ordered_set;
*/
#define     pb                  push_back
#define     pii                 pair<int,int>
#define     pli                 pair<long long int,int>
#define     pbi                 pair<bool,int>
#define     pob                 pop_back
#define     all(a)              a.begin(),a.end()
#define     fio                 ios_base::sync_with_stdio(false); cin.tie(NULL);cout.tie(NULL);
#define     i64                 long long int
#define     mem(x,y)            memset(x,y,sizeof(x))
#define     fill(arr,b)         fill(arr, arr+sizeof(arr)/sizeof(arr[0]), b)
#define     maxarr(n,arr,m)     m=-1e9;for(int i=0;i<n;i++)if(arr[i]>m) m=arr[i];
#define     read                freopen("input.txt","r",stdin);
#define     sortd(x,y)          sort(x,y,greater<int>());
#define     F                   first
#define     S                   second
#define     pdi                 pair<double,int>
const int maxn = (i64)1e9+7;
const double pi = acos(-1.0);

//bool fne(const pii &a, const pii &b){return (a.F > b.F)||(a.F==b.F&&a.S>b.S);}
//bool sne(const pii &a, const pii &b){return (a.S < b.S)||(a.S==b.S&&a.F<b.F);}
//bool isprime(int n){for(int i=2;i*i<=n;i++){if(n%i==0)return false;}return true;}


int main(){
    //read;
    fio;
    int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        string a,b;
        cin>>a>>b;
        bool fg=1;
        for(int i=0;i<n;i++)
            if(a[i]!=b[i]) {fg=false;break;}
        if(fg) {cout<<"0"<<endl;continue;}
        fg=(bool)(a[0]-'0');
        if(a[0]=='0') fg=0;
        else fg=1;
        int cnt=0;
        vector<int>v;
        for(int i=0;i<n-1;i++){
            if(a[i]!=a[i+1]) {cnt++;v.pb(i+1);}
        }
        if(cnt&1) fg=!fg;
        //cout<<fg;

        for(int i=n-1;i>=0;i--){
            if((bool)(b[i]-'0')!=fg){
                v.pb(i+1);
                fg=!fg;
            }
        }
        cout<<v.size()<<" ";
        for(auto i: v) cout<<i<<" ";
        cout<<endl;
    }

    return 0;
}
