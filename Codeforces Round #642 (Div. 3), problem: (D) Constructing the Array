#pragma GCC optimize("Ofast")
#pragma GCC target("avx,avx2,fma")
#pragma GCC optimization ("unroll-loops")

#include<bits/stdc++.h>

using namespace std;
#define pb push_back
#define pii pair<int,int>
#define pli pair<long long int,int>
#define pbi pair<bool,int>
#define pob pop_back
#define all(a) a.begin(),a.end()
#define fio ios_base::sync_with_stdio(false); cin.tie(0);cout.tie(0);
#define i64 long long int
#define mem(x,y) memset(x,y,sizeof(x))
#define fill(arr,b) fill(arr, arr+sizeof(arr)/sizeof(arr[0]), b)
#define maxarr(n,arr,m) m =-1e9;for(int i=0;i<n;i++)if(arr[i]>m) m=arr[i];
#define read freopen("input.txt","r",stdin);

const double pi = acos(-1.0);
const int maxn = (i64)1e9+7;

priority_queue<tuple<int,int,int> > pq;
int arr[200005];
int main()
{
    //read;
    int t;
    scanf("%d",&t);
    while(t--)
    {
        int n;
        scanf("%d",&n);
        pq.push({n,1,n});
        for(int i=1;i<=n;i++)
        {
            int sz=get<0>(pq.top());
            int l=abs(get<1>(pq.top()));
            int r=abs(get<2>(pq.top()));
            pq.pop();
            if(sz==1){arr[l]=i;continue;}
            int x=(r+l)/2;
            arr[x]=i;
            pq.push({x-l,l*(-1),(x-1)*(-1)});
            pq.push({r-x,(x+1)*(-1),r*(-1)});
        }
        for(int i=1;i<=n;i++)
            printf("%d ",arr[i]);
        printf("\n");
    }

    return 0;
}
