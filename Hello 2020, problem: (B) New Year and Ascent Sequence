#pragma GCC optimize("Ofast")
#pragma GCC target("avx,avx2,fma")
#pragma GCC optimization ("unroll-loops")

#include<bits/stdc++.h>

using namespace std;
#define pb push_back
#define pii pair<int,int>
#define pli pair<long long int,int>
#define pbi pair<bool,int>
#define pob pop_back
#define all(a) a.begin(),a.end()
#define fio ios_base::sync_with_stdio(false); cin.tie(0);cout.tie(0);
#define i64 long long int
#define mem(x,y) memset(x,y,sizeof(x))
#define fill(arr,b) fill(arr, arr+sizeof(arr)/sizeof(arr[0]), b)
#define maxarr(n,arr,m) m =-1e9;for(int i=0;i<n;i++)if(arr[i]>m) m=arr[i];
#define read freopen("input.txt","r",stdin);
#define F first
#define S second

const int maxn = (i64)1e9+7;
const double pi = acos(-1.0);

//bool fne(const pii &a, const pii &b){return (a.F < b.F)||(a.F==b.F&&a.S<b.S);}
//bool sne(const pii &a, const pii &b){return (a.S < b.S)||(a.S==b.S&&a.F<b.F);}

int mn[100005],mx[100005],z;
int main()
{
    //read;
    int n,q;
    i64 ans=0;
    scanf("%d",&n);
    for(int i=0;i<n;i++)
    {
        bool asc=0;
        int a,mxx=-1,mnn=1000005;
        scanf("%d",&q);
        while(q--)
        {
            scanf("%d",&a);
            if(a>mnn) {asc=1;}
            mxx=max(a,mxx);
            mnn=min(a,mnn);
        }
        if(!asc) {mx[z]=mxx;mn[z]=mnn;z++;}
    }
    ans=1LL*n*n-1LL*z*z;
    sort(mn,mn+z);
    sort(mx,mx+z);
    for(int i=0;i<z;i++) ans+= lower_bound(mn,mn+z,mx[i])-mn;
    printf("%lld",ans);
    return 0;
}
