#pragma GCC optimize("Ofast")
#pragma GCC target("avx,avx2,fma")
#pragma GCC optimization ("unroll-loops")

#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define pii pair<int,int>
#define pli pair<long long int,int>
#define pbi pair<bool,int>
#define pob pop_back
#define all(a) a.begin(),a.end()
#define fio ios_base::sync_with_stdio(false); cin.tie(NULL);cout.tie(NULL);
#define i64 long long int
#define mem(x,y) memset(x,y,sizeof(x))
#define fill(arr,b) fill(arr, arr+sizeof(arr)/sizeof(arr[0]), b)
#define maxarr(n,arr,m) m=-1e9;for(int i=0;i<n;i++)if(arr[i]>m) m=arr[i];
#define read freopen("input.txt","r",stdin);
#define sortd(x,y) sort(x,y,greater<int>());
#define F first
#define S second

const int maxn = (i64)1e9+7;
const double pi = acos(-1.0);

//bool fne(const pii &a, const pii &b){return (a.F > b.F)||(a.F==b.F&&a.S>b.S);}
//bool sne(const pii &a, const pii &b){return (a.S < b.S)||(a.S==b.S&&a.F<b.F);}
//bool isprime(int n){for(int i=2;i*i<=n;i++){if(n%i==0)return false;}return true;}

int arr[1005],n;
bool ok(){
    for(int i=0;i<n-1;i++){
        if(arr[i]>arr[i+1]) return 0;
    }
    return 1;
}
int get_mex(){
    bool is[n+1];
    mem(is,0);
    for(int i=0;i<n;i++) is[arr[i]]=1;
    for(int i=0;i<=n;i++)
        if(is[i]==0)
            return i;
}
int get_pos(){
    for(int i=0;i<n;i++) if(arr[i]!=i) return i;
}
int main(){
    //read;
    fio;
    int t;
    cin>>t;
    while(t--){
        cin>>n;
        vector<int>v;
        for(int i=0;i<n;i++) cin>>arr[i];
        while(!ok()){
            int mex=get_mex();
            if(mex==n) {
                int x=get_pos();
                arr[x]=mex;
                v.pb(x+1);
            }
            else {arr[mex]=mex;v.pb(mex+1);}
        }
        //for(int i=0;i<n;i++) cout<<arr[i]<<" ";cout<<endl;
        cout<<v.size()<<endl;
        for(auto i:v) cout<<i<<" ";
        cout<<endl;
    }
    return 0;
}
