#pragma GCC optimize("Ofast")
#pragma GCC target("avx,avx2,fma")
#pragma GCC optimization ("unroll-loops")

#include<bits/stdc++.h>

using namespace std;
#define pb push_back
#define pii pair<int,int>
#define pli pair<long long int,int>
#define pbi pair<bool,int>
#define pob pop_back
#define all(a) a.begin(),a.end()
#define fio ios_base::sync_with_stdio(false); cin.tie(0);cout.tie(0);
#define i64 long long int
#define mem(x,y) memset(x,y,sizeof(x))
#define fill(arr,b) fill(arr, arr+sizeof(arr)/sizeof(arr[0]), b)
#define maxarr(n,arr,m) m =-1e9;for(int i=0;i<n;i++)if(arr[i]>m) m=arr[i];
#define read freopen("input.txt","r",stdin);

const int maxn = (i64)1e9+7;
const double pi = acos(-1.0);

i64 tree[200005];
i64 query(int i)
{
    i64 sum = 0;
    while(i>0){sum+=tree[i]; i-=(i&-i);}
    return sum;
}

void update(int i, int x, int n)
{
    while(i<=n){tree[i]+=x; i+=(i&-i);}
}
i64 range_query(int i, int j)
{
    i64 pre = query(i-1);
    i64 suf = query(j);
    return suf-pre;
}
int main()
{
    int n,a,k;
    scanf("%d%d",&n,&k);
    for(int i=1;i<=n;i++) {scanf("%d",&a);update(i,a,n);}
    int w=n-k+1;
    int x=n-w;
    double sum=0;
    for(int i=1;i+x<=n;i++) sum+=range_query(i,i+x);
    sum = sum/(double)w;
    printf("%.6lf",sum);
    return 0;
}
