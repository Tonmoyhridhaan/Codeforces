#pragma GCC optimize("Ofast")
#pragma GCC target("avx,avx2,fma")
#pragma GCC optimization ("unroll-loops")

#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define pii pair<int,int>
#define pli pair<long long int,int>
#define pbi pair<bool,int>
#define pob pop_back
#define all(a) a.begin(),a.end()
#define fio ios_base::sync_with_stdio(false); cin.tie(0);cout.tie(0);
#define i64 long long int
#define mem(x,y) memset(x,y,sizeof(x))
#define fill(arr,b) fill(arr, arr+sizeof(arr)/sizeof(arr[0]), b)
#define maxarr(n,arr,m) m =-1e9;for(int i=0;i<n;i++)if(arr[i]>m) m=arr[i];
#define read freopen("input.txt","r",stdin);

const double pi = acos(-1.0);
const int maxn = (i64)1e9+7;

int arr[100005];
int dp[100005];

int main()
{
    //read;
    int t;
    scanf("%d",&t);
    while(t--)
    {
        int n,ans=1;
        scanf("%d",&n);
        for(int i=1;i<=n;i++) {scanf("%d",&arr[i]);dp[i]=1;}

        for(int i=2;i<=n;i++)
        {
            int mx=0;
            for(int j=1;j*j<=i;j++)
            {
                if(i%j==0)
                {
                    int x=i/j;
                    if(arr[i]>arr[j]) mx = max(mx,dp[j]);
                    if(arr[i]>arr[x]) mx = max(mx,dp[x]);
                }
            }
            dp[i] += mx;
            ans = max(dp[i],ans);
        }
        printf("%d\n",ans);
    }
return 0;
}
