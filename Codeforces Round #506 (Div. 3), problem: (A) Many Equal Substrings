#pragma GCC optimize("Ofast")
#pragma GCC target("avx,avx2,fma")
#pragma GCC optimization ("unroll-loops")

#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define pii pair<int,int>
#define pli pair<long long int,int>
#define pbi pair<bool,int>
#define pob pop_back
#define all(a) a.begin(),a.end()
#define fio ios_base::sync_with_stdio(false); cin.tie(0);cout.tie(0);
#define i64 long long int
#define mem(x,y) memset(x,y,sizeof(x))
#define fill(arr,b) fill(arr, arr+sizeof(arr)/sizeof(arr[0]), b)
#define maxarr(n,arr,m) m =-1e9;for(int i=0;i<n;i++)if(arr[i]>m) m=arr[i];
#define read freopen("input.txt","r",stdin);

const double pi = acos(-1.0);
const int maxn = (i64)1e9+7;
vector<int> createlps(string pat)
{
    int sz = pat.size();
    vector<int>lps(sz);
    int i = 0;
    for(int j = 1 ; j<sz ; )
    {
        if(pat[i] == pat[j])
        {
            lps[j] = i+1;i++;j++;
        }
        else
        {
            if(i!=0) i = lps[i-1];
            else j++;
        }
    }
    return lps;
}
int main()
{
    int n, k;
    cin >> n >> k;
    string s;
    cin >> s;
    int sz = s.size();
    vector<int>v = createlps(s);
    string p;
    int x = v[sz-1];
    for(int i = x ; i<sz ; i++) p+=s[i];
    cout << s;
    for(int i = 1 ; i<k ; i++) cout << p;
    return 0;
}
