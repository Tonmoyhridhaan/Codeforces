#pragma GCC optimize("Ofast")
#pragma GCC target("avx,avx2,fma")
#pragma GCC optimization ("unroll-loops")

#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define pii pair<int,int>
#define pli pair<long long int,int>
#define pbi pair<bool,int>
#define pob pop_back
#define all(a) a.begin(),a.end()
#define fio ios_base::sync_with_stdio(false); cin.tie(NULL);cout.tie(NULL);
#define i64 long long int
#define mem(x,y) memset(x,y,sizeof(x))
#define fill(arr,b) fill(arr, arr+sizeof(arr)/sizeof(arr[0]), b)
#define maxarr(n,arr,m) m=-1e9;for(int i=0;i<n;i++)if(arr[i]>m) m=arr[i];
#define read freopen("input.txt","r",stdin);
#define sortd(x,y) sort(x,y,greater<int>());
#define F first
#define S second

const int maxn = (i64)1e9+7;
const double pi = acos(-1.0);

//bool fne(const pii &a, const pii &b){return (a.F > b.F)||(a.F==b.F&&a.S>b.S);}
//bool sne(const pii &a, const pii &b){return (a.S < b.S)||(a.S==b.S&&a.F<b.F);}
//bool isprime(int n){for(int i=2;i*i<=n;i++){if(n%i==0)return false;}return true;}

int a[305][305];
int main(){
    //read;
    fio;
    int t;cin>>t;
    while(t--){

        int n,m;
        cin>>n>>m;
        for(int i=0;i<n;i++)
            for(int j=0;j<m;j++)
                cin>>a[i][j];
        bool fg=true;
        a[0][0]<=2?a[0][0]=2:fg=false;
        a[0][m-1]<=2?a[0][m-1]=2:fg=false;
        a[n-1][0]<=2?a[n-1][0]=2:fg=false;
        a[n-1][m-1]<=2?a[n-1][m-1]=2:fg=false;
        for(int i=1;i<m-1;i++) a[0][i]<=3?a[0][i]=3:fg=false;
        for(int i=1;i<n-1;i++) a[i][0]<=3?a[i][0]=3:fg=false;
        for(int i=1;i<m-1;i++) a[n-1][i]<=3?a[n-1][i]=3:fg=false;
        for(int i=1;i<n-1;i++) a[i][m-1]<=3?a[i][m-1]=3:fg=false;

        for(int i=1;i<n-1;i++)
            for(int j=1;j<m-1;j++)
                a[i][j]<=4?a[i][j]=4:fg=false;
            if(!fg) {cout<<"NO"<<endl;continue;}
            else cout<<"YES"<<endl;
            for(int i=0;i<n;i++){
                for(int j=0;j<m;j++)
                    cout<<a[i][j]<<" ";
                cout<<endl;
            }
    }
    return 0;
}
