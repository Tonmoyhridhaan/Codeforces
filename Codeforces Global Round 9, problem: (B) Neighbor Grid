#pragma GCC optimize("Ofast")
#pragma GCC target("avx,avx2,fma")
#pragma GCC optimization ("unroll-loops")

#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define pii pair<int,int>
#define pli pair<long long int,int>
#define pbi pair<bool,int>
#define pob pop_back
#define all(a) a.begin(),a.end()
#define fio ios_base::sync_with_stdio(false); cin.tie(NULL);cout.tie(NULL);
#define i64 long long int
#define mem(x,y) memset(x,y,sizeof(x))
#define fill(arr,b) fill(arr, arr+sizeof(arr)/sizeof(arr[0]), b)
#define maxarr(n,arr,m) m=-1e9;for(int i=0;i<n;i++)if(arr[i]>m) m=arr[i];
#define read freopen("input.txt","r",stdin);
#define sortd(x,y) sort(x,y,greater<int>());
#define F first
#define S second

const int maxn = (i64)1e9+7;
const double pi = acos(-1.0);

//bool fne(const pii &a, const pii &b){return (a.F > b.F)||(a.F==b.F&&a.S>b.S);}
//bool sne(const pii &a, const pii &b){return (a.S < b.S)||(a.S==b.S&&a.F<b.F);}
//bool isprime(int n){for(int i=2;i*i<=n;i++){if(n%i==0)return false;}return true;}

int a[305][305];
int main(){
    fio;
    //read;
    int t;
    cin>>t;
    while(t--){
        int n,m;
        cin>>n>>m;
        for(int i=0;i<n;i++)
            for(int j=0;j<m;j++)
                cin>>a[i][j];
        bool fg=true;
        int x=0;
        while(x<2)
        {
            for(int i=0;i<n;i++)
            {
                for(int j=0;j<m;j++)
                {
                    if(a[i][j]==0) continue;
                    if(a[i][j]>4){fg=false;break;}
                    if(((i==0&&j==0)||(i==n-1&&j==m-1)||(i==0&&j==m-1)||(i==n-1&&j==0))&&a[i][j]>2){fg=false;break;}
                    if(((i==0)||(j==0)||(i==n-1)||(j==m-1))&&a[i][j]==4){fg=false;break;}
                    if(a[i][j]>0){
                        int cnt=0;
                        if(j-1>=0&&a[i][j-1]>0)cnt++;
                        if(i-1>=0&&a[i-1][j]>0)cnt++;
                        if(j+1<m&&a[i][j+1]>0)cnt++;
                        if(i+1<n&&a[i+1][j]>0)cnt++;
                        if(cnt>a[i][j])a[i][j]=cnt;
                        else if(cnt<a[i][j])
                        {
                            int need=a[i][j]-cnt;
                            if(need&&j-1>=0&&a[i][j-1]==0){a[i][j-1]=1;need--;}
                            if(need&&i-1>=0&&a[i-1][j]==0){a[i-1][j]=1;need--;}
                            if(need&&j+1<m&&a[i][j+1]==0){a[i][j+1]=1;need--;}
                            if(need&&i+1<n&&a[i+1][j]==0){a[i+1][j]=1;need--;}
                            if(need>0) {fg=false;break;}
                        }
                    }
                }
                if(!fg) break;
            }
            x++;
        }
        if(!fg) {cout<<"NO"<<endl;continue;}
        else cout<<"YES"<<endl;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++)
                cout<<a[i][j]<<" ";
            cout<<endl;
        }
    }
    return 0;
}
