#pragma GCC optimize("Ofast")
#pragma GCC target("avx,avx2,fma")
#pragma GCC optimization ("unroll-loops")

#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define pii pair<int,int>
#define pli pair<long long int,int>
#define pbi pair<bool,int>
#define pob pop_back
#define all(a) a.begin(),a.end()
#define fio ios_base::sync_with_stdio(false); cin.tie(0);cout.tie(0);
#define i64 long long int
#define mem(x,y) memset(x,y,sizeof(x))
#define fill(arr,b) fill(arr, arr+sizeof(arr)/sizeof(arr[0]), b)
#define maxarr(n,arr,m) m =-1e9;for(int i=0;i<n;i++)if(arr[i]>m) m=arr[i];
#define read freopen("input.txt","r",stdin);

const double pi = acos(-1.0);
const int maxn = (i64)1e9+7;
bool arr[1005];
int l[1005],m[1005],r[1005];
int n;
int left(int now)
{
    for(int i = n ; i>=1 ; i--)
    {
        if(now>=l[i]&&now<=m[i]) return m[i];
    }
    return -1;
}

int right(int now)
{
    for(int i = n ; i>=1 ; i--)
    {
        if(now>=m[i]&&now<=r[i]) return m[i];
    }
    return -1;
}

int main()
{
    //read;
    int p;
    cin >> n >> p;
    mem(l,-1);
    mem(r,-1);
    mem(m,-1);
    for(int i = 1 ; i<=n ; i++) cin >> arr[i];
    for(int i = 1 ; i<=n ; i++)
    {
        if(arr[i]==1)
        {
            l[i] = i-p+1;
            r[i] = i+p-1;
            m[i] = i;
        }
    }
    int now=1,cnt=0;
    bool fg = true;
    for(int i = 1 ; i<=n ; i++)
    {
        if(now>n) break;
        int x = left(now);
        int y = right(now);
        if(x!=-1)
        {
            now=r[x]+1;
            cnt++;
        }
        else if(y!=-1)
        {
            now=r[y]+1;
            cnt++;
        }
        else {fg=false;break;}
    }
    if(fg) cout<<cnt;
    else cout << "-1";

    return 0;
}
